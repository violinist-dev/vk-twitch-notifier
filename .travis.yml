language: 'php'
php:
- '7.2'

cache:
  directories:
  - 'vendor'
  - 'venv'

env:
  global:
  - APP_TIMEZONE=UTC

  - VK_COMMUNITY_ID=123
  - VK_CALLBACK_CONFIRMATION_TOKEN=17d23e42
  - VK_API_ACCESS_TOKEN=cbafc32e071edced419509a79d35259961aa3eaf3b4a28710eb48270c2769d0588490f135e79bde80ffe2
  - VK_WEBHOOK_SECRET=de832e65f0d5698e794463201eedefdb
  - TWITCH_USERNAME=tijoe
  - TWITCH_APPLICATION_CLIENT_ID=U7ymWuxgQiaYoniFZHzAgcVUUDvtzs

  - APP_ENV=test
  - APP_SECRET=9d7eb543c117e03e262083074f1ee345

  - DATABASE_HOST=localhost
  - DATABASE_PORT=5432
  - DATABASE_USER=postgres
  - DATABASE_PASSWORD=
  - DATABASE_DBNAME=vk-twitch-notifier

services:
- 'postgresql'

jobs:
  include:
  - stage: 'Installing dependencies'
    name: 'Composer'
    before_script:
    # Disable Xdebug
    - phpenv config-rm xdebug.ini || return 0

    script:
    - travis_retry composer install --no-progress --no-suggest --no-interaction

  - stage: 'Installing dependencies'
    name: 'pip'
    before_script:
    # Install pip
    - sudo apt-get -qq install -y python-pip

    # Install & setup virtualenv
    - travis_retry pip install --user --upgrade --quiet --disable-pip-version-check virtualenv
    - virtualenv venv
    - source venv/bin/activate

    script:
    - travis_retry pip install --quiet --disable-pip-version-check --requirement requirements.txt

  - stage: 'Code analysis'
    name: 'yamllint'
    before_script:
    # Activate virtualenv
    - source venv/bin/activate

    script:
    - composer app:lint-yaml

  - stage: 'Code analysis'
    name: 'PHP-CS-Fixer'
    before_script:
    # Disable Xdebug
    - phpenv config-rm xdebug.ini || return 0

    script:
    - composer app:lint-php-cs-fixer

  - stage: 'Code analysis'
    name: 'PHPStan'
    before_script:
    # Disable Xdebug
    - phpenv config-rm xdebug.ini || return 0

    # Clear cache with warmup to generate container XML file
    - bin/console cache:clear

    script:
    - composer app:analyze-phpstan

  - stage: 'Code analysis'
    name: 'Psalm'
    before_script:
    # Disable Xdebug
    - phpenv config-rm xdebug.ini || return 0

    script:
    - composer app:analyze-psalm

  - stage: 'Tests'
    name: 'PHPUnit'
    before_script:
    # Recreate database
    - composer app:recreate-db

    script:
    - composer app:test

    after_success:
    - travis_retry php vendor/bin/php-coveralls
